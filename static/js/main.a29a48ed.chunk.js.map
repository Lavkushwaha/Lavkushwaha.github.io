{"version":3,"sources":["config.js","app.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","App","props","getUserData","Firebase","database","ref","on","snapshot","state","val","tempData","Live_Moisture","Live_Time","data","m2","moist","t2","time","tempData2","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","length","pop","setState","data2","initializeApp","this","prevProps","prevState","Fragment","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4MAWiBA,EAXF,CAMXC,OAAQ,2CACRC,WAAY,8CACZC,YAAa,wD,gBC+GFC,E,kDAhHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAwBRC,YAAc,WACFC,IAASC,WAAWC,IAAI,KAC9BC,GAAG,SAAS,SAACC,GACf,IAAMC,EAAQD,EAASE,MAGjBC,EAAQ,CACZ,CAACF,EAAMG,cAAeH,EAAMI,YADhB,mBAET,EAAKJ,MAAMK,OAGVC,EAAE,CAAIN,EAAMG,eAAV,mBAA2B,EAAKH,MAAMO,QACxCC,EAAE,CAAIR,EAAMI,WAAV,mBAAuB,EAAKJ,MAAMS,OAKpCC,EAAY,CAChBC,OAAQH,EACRI,SAAU,CACR,CACEC,MAAO,aACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBzB,KAAMC,KAKRJ,EAAS6B,OAAS,KACpB7B,EAAS8B,MAGTxB,EAAGwB,MACH1B,EAAG0B,OAEL,EAAKC,SAAS,CACZ5B,KAAMH,EACNO,KAAKD,EACLD,MAAMD,EAGN4B,MAAMxB,QAhFVf,IAASwC,cAAc/C,GAEvB,EAAKY,MAAQ,CACXK,KAAM,GAENI,KAAK,GACLF,MAAM,GAEN2B,MAAO,IAVQ,E,qDAgBnB,WACEE,KAAK1C,gB,gCAGP,SAAmB2C,EAAWC,GACVF,KAAKpC,Q,oBAqEzB,WACE,OACE,cAAC,IAAMuC,SAAP,UACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,gDAIJ,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SAEA,cAAC,IAAD,CAAM3C,IAAI,QAAQQ,KAAM+B,KAAKpC,MAAMkC,qB,GAxG7BO,IAAMC,WCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a29a48ed.chunk.js","sourcesContent":["const config = {\n  //   apiKey: \"AIzaSyAgBvGKlPEySB6vCWVkyO5OnRiVP3pzgps\",\n  // authDomain: \"react-firebase-basic.firebaseapp.com\",\n  // databaseURL: \"https://react-firebase-basic.firebaseio.com\"\n\n\n    apiKey: \"8UYgKBvz5l6Voq8xgQMCwBscbuimLsA9DjzrZSel\",\n    authDomain: \"homeplant-f2136-default-rtdb.firebaseio.com\",\n    databaseURL: \"https://homeplant-f2136-default-rtdb.firebaseio.com/\",\n  }\n  \n  export default config;","import React from \"react\";\n\nimport Firebase from \"firebase\";\nimport config from \"./config\";\nimport { Line } from \"react-chartjs-2\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      data: [],\n\n      time:[],\n      moist:[],\n\n      data2: {\n       \n      },\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n    }\n  }\n\n  getUserData = () => {\n    let ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", (snapshot) => {\n      const state = snapshot.val();\n\n      // console.log(state);\n      const tempData = [\n        [state.Live_Moisture, state.Live_Time],\n        ...this.state.data,\n      ];\n\n      const m2 = [state.Live_Moisture,...this.state.moist];\n      const t2 = [state.Live_Time,...this.state.time];\n      \n\n      \n\n      const tempData2 = {\n        labels: t2,\n        datasets: [\n          {\n            label: \"Home Plant\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: \"rgba(75,192,192,0.4)\",\n            borderColor: \"rgba(75,192,192,1)\",\n            borderCapStyle: \"butt\",\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: \"miter\",\n            pointBorderColor: \"rgba(75,192,192,1)\",\n            pointBackgroundColor: \"#fff\",\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: m2,\n          },\n        ],\n      };\n\n      if (tempData.length > 10) {\n        tempData.pop();\n        // time.pop();\n        // moist.pop();\n        t2.pop();\n        m2.pop();\n      }\n      this.setState({\n        data: tempData,\n        time:t2,\n        moist:m2,\n\n        \n        data2:tempData2\n        \n      });\n\n      // this.setState(state);\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <h1>Home Plant</h1>\n            </div>\n          </div>\n        \n          <div className=\"row\">\n            <div className=\"col-xl-12\"> \n\n            <Line ref=\"chart\" data={this.state.data2} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}